group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc)
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count), fill = tld) +
geom_bar(stat = 'identity') +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
#Stats about TLDs used
summ_tld <- fk %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc)
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count), color = tld) +
geom_bar(stat = 'identity') +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
#Stats about TLDs used
summ_tld <- fk %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc)
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count)) +
geom_bar(stat = 'identity', fill = tld) +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
#Stats about TLDs used
summ_tld <- fk %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc)
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count)) +
geom_bar(stat = 'identity') +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count)) +
geom_bar(stat = 'identity', color = tld) +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count, fill = tld)) +
geom_bar(stat = 'identity') +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count, fill = tld)) +
geom_bar(stat = 'identity', show.legend = FALSE) +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
# Stats about registrars used
summ_reg <- df %>%
filter(trust != 'fake') %>%
count(registrar) %>%
mutate(prop = n/(nrow(filter(df, trust != 'fake')))) %>%
arrange(desc(n))
(summ_fkreg <- fk %>%
group_by(registrar) %>%
summarise(Count = n(), Proportion = Count / nrow(fk)) %>%
rename(Registrar = 1) %>%
arrange(desc(Count)) %>% slice(1:20))
# Groupings of Google Analytics codes
(summ_ga <- gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'Organization', 'ext'), sep = '-') %>%
group_by(Organization) %>%
summarise(`Domain cluster` = toString(domain_name),
#ga_code = paste(code, org, ext, sep = '-'),
Count = n()) %>%
filter(Count > 1) %>% arrange(desc(Count)))
# Analysis of words used in domain names
word_analysis <- tibble(text = flatten_chr(df$dom_split))
word_analysis <- word_analysis %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
summ_word <- word_analysis %>%
anti_join(get_stopwords()) %>%                          # Remove stop words
filter(str_length(word) > 1) %>%
arrange(desc(n))
# Lollipop plot
summ_word %>%
arrange(desc(n), desc(word)) %>% slice(1:25) %>%
ggplot(aes(x=word, y=n)) +
geom_segment( aes(x=word, xend=word, y=0, yend=n)) +
geom_point( size=5, color="red", fill=alpha("orange", 0.3),
alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
labs(title = 'Top 20 Words used in fake domains')
rm(word_analysis)
density_plot <- function(df, col) {
col_name <- enquo(col)
df %>%
ggplot(aes(x = !!col_name, group = trust, fill = trust)) +
geom_density(adjust = 1.5, alpha = 0.4)
}
# Registration time density by trust
density_plot(df, creation_date) +
scale_x_datetime(minor_breaks = '2 years') +
labs(title = 'Density of domain registations over time', y = 'Density') +
theme_ipsum() + theme(axis.title.x = element_blank())
# Update to expiration density by trust
density_plot(df, update_to_exp) +
theme_ipsum() + theme(axis.title.x = element_blank()) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 200)) +
scale_y_sqrt() +
labs(title = 'Density of time to expiration by trust',
y = 'Density',
x = 'Time between update and expiration (days)') +
theme_ipsum()
# Site age and ranking, by trust
fk %>%
ggplot(., aes(x = dom_age_days, y = rank, color = trust)) +
geom_point(show.legend = FALSE) + theme_ipsum() +
scale_y_log10(labels = scales::comma) +
scale_x_continuous(labels = scales::comma) +
labs(title = 'Domain age by Alexa site ranking',
x = 'Age of domain (days)', y = 'Site ranking')
# num nameservers by trust
df %>%
filter(num_nameservers < 50) %>%
ggplot( aes(x=trust, y=num_nameservers, color=trust)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
labs(title = 'Number of nameservers by domain trustworthiness',
y = 'Number of name servers', x = element_blank()) +
coord_flip()
# Registration time density by trust
density_plot(df, creation_date) +
scale_x_datetime(minor_breaks = '2 years') +
labs(title = 'Density of domain registations over time', y = 'Density') +
theme_ipsum() + theme(axis.title.x = element_blank())
# Registration time density by trust
density_plot(df, creation_date) +
scale_x_datetime(minor_breaks = '2 years') +
labs(title = 'Density of domain registations over time', y = 'Density') +
theme_ipsum() + theme(axis.title.x = element_blank())
# Update to expiration density by trust
density_plot(df, update_to_exp) +
theme_ipsum() + theme(axis.title.x = element_blank()) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 200)) +
scale_y_sqrt() +
labs(title = 'Density of time to expiration by trust',
y = 'Density',
x = 'Time between update and expiration (days)') +
theme_ipsum()
# Update to expiration density by trust
density_plot(df, update_to_exp) +
theme_ipsum() + theme(axis.title.x = element_blank()) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 200)) +
scale_y_sqrt() +
labs(title = 'Density of time to expiration by trust',
y = 'Density',
x = 'Time between update and expiration (days)') +
theme_ipsum()
# Site age and ranking, by trust
fk %>%
ggplot(., aes(x = dom_age_days, y = rank, color = trust)) +
geom_point(show.legend = FALSE) + theme_ipsum() +
scale_y_log10(labels = scales::comma) +
scale_x_continuous(labels = scales::comma) +
labs(title = 'Domain age by Alexa site ranking',
x = 'Age of domain (days)', y = 'Site ranking')
# num nameservers by trust
df %>%
filter(num_nameservers < 50) %>%
ggplot( aes(x=trust, y=num_nameservers, color=trust)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
labs(title = 'Number of nameservers by domain trustworthiness',
y = 'Number of name servers', x = element_blank()) +
coord_flip()
# keyword length, trust, domain age
df %>%
filter(keyword_length <= 6,
dom_age_days < 365.25 * 5) %>% # reg in the past 5 years) %>%
ggplot(aes(x = keyword_length, y = dom_age_days, color = trust)) +
geom_count(alpha = 0.8) +
theme_ipsum() +
labs(title = 'Domain keyword length by domain age',
x = 'Keyword length', y = 'Domain name age')
# domain length, keyword length, trust
df %>%
filter(domain_length < 30) %>%
ggplot(aes(x=domain_length, y=keyword_length, color=trust)) +
geom_count(alpha = 0.6) +
theme_ipsum() +
labs(title = 'Domain length by domain keyword length, by trust',
x = 'Domain name length', y = 'Keyword length') +
coord_flip()
### fk country, registrar, domain age
fk %>%
drop_na(country) %>%
filter(country != 'REDACTED FOR PRIVACY',
dom_age_days < 365.25 * 5) %>% # reg in the past 5 years
mutate(country = fct_lump_n(country, n = 5)) %>%
mutate(registrar = fct_lump_n(registrar, n = 1)) %>%
ggplot( aes(x = country, y = dom_age_days, fill = country)) +
geom_boxplot() +
facet_wrap(~ registrar) +
theme_ipsum() +
labs(title = 'GoDaddy.com, fake registrations',
subtitle = 'Faceted against other registrars in the last 5 years',
x = 'Country', y = 'Domain age')
# Registration time density by trust
density_plot(df, creation_date) +
scale_x_datetime(minor_breaks = '2 years') +
labs(title = 'Density of domain registations over time', y = 'Density') +
theme_ipsum() + theme(axis.title.x = element_blank())
library(tidyverse)
library(tidytext)
library(lubridate)
library(hrbrthemes)
library(viridis)
df <- read_csv('data/output/final_df.csv')
# Clean domain splits
df <- df %>%
select(-zipcode) %>%
mutate(dom_split = mapply(str_remove_all, dom_split, '[[:punct:]]')) %>%
mutate(dom_split = mapply(str_split, dom_split, ' ')) %>%
# Verify col_types
type_convert(col_types = 'icfffTTTcffffffc')
gadf <- read_csv('data/output/mined_gacodes.csv')
# Refactor DNSsec
df$dnssec <- fct_collapse(
df$dnssec,
unsigned = c('unsigned', 'Unsigned', 'unsigned delegation',
'Unsigned delegation, no records', 'no',
'Unsigned delegation, no records'),
signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed',
'yes', 'Signed delegation'),
inactive = 'Inactive')
# .gov TLDs shouldn't be fake
df <- df %>% mutate(trust = replace(trust, which(tld == 'gov'), 'initial trust'))
# Normalize registrars
df <- df %>%
mutate(registrar = mapply(str_remove_all,
as.character(registrar), '[[:punct:]]')) %>%
mutate(registrar = mapply(str_to_lower, as.character(registrar))) %>%
mutate(registrar = as.factor(registrar))
# fox5dc.com shouldn't be here
df <- df %>% mutate(trust = replace(trust, which(domain == 'fox5dc'), 'initial trust'))
# Add some more quantitative features
df <- df %>%
mutate(domain_length = mapply(str_length, domain)) %>%
mutate(keyword_length = mapply(length, dom_split)) %>%
# Convert name servers to lists
mutate(name_servers = mapply(str_remove_all, name_servers, '[[:punct:]]')) %>%
mutate(name_servers = mapply(str_split, name_servers, ' ')) %>%
mutate(num_nameservers = mapply(length, name_servers)) %>%
# Add metrics on time objects
mutate(dom_age_days = as.double(difftime(now('UTC'),
creation_date,
units = 'days'))) %>%
mutate(dom_last_update = as.double(difftime(now('UTC'),
updated_date,
units = 'days'))) %>%
mutate(days_to_exp = as.double(difftime(expiration_date,
now('UTC'),
units = 'days'))) %>%
mutate(update_to_exp = days_to_exp - dom_last_update)
fk <- filter(df, trust == 'fake')
# Initial trust
(summ_trust <- df %>%
group_by(trust) %>%
summarise(Count = n(), Proportion = Count / nrow(df)) %>%
rename(`Trust rating` = 1))
# Stats about countries
fk %>%
drop_na(country) %>%
filter(country != 'REDACTED FOR PRIVACY') %>%
mutate(country = fct_lump_n(country, n = 5)) %>%
count(country) %>%
rename(Country = country, Count = n) %>%
ggplot(., aes(reorder(Country, -Count), Count, fill = Country)) +
geom_bar(stat = 'identity') +
theme_ipsum() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title = 'Fake domain registrations by country')
#Stats about TLDs used
summ_tld <- fk %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc)
summ_tld %>%
filter(tld != 'com') %>%
slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count, fill = tld)) +
geom_bar(stat = 'identity', show.legend = FALSE) +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by TLD',
subtitle = 'Excludes .com TLDs', x = 'Top-level domain')
# Stats about registrars used
summ_reg <- df %>%
filter(trust != 'fake') %>%
count(registrar) %>%
mutate(prop = n/(nrow(filter(df, trust != 'fake')))) %>%
arrange(desc(n))
(summ_fkreg <- fk %>%
group_by(registrar) %>%
summarise(Count = n(), Proportion = Count / nrow(fk)) %>%
rename(Registrar = 1) %>%
arrange(desc(Count)) %>% slice(1:20))
# Groupings of Google Analytics codes
(summ_ga <- gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'Organization', 'ext'), sep = '-') %>%
group_by(Organization) %>%
summarise(`Domain cluster` = toString(domain_name),
#ga_code = paste(code, org, ext, sep = '-'),
Count = n()) %>%
filter(Count > 1) %>% arrange(desc(Count)))
# Analysis of words used in domain names
word_analysis <- tibble(text = flatten_chr(df$dom_split))
word_analysis <- word_analysis %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
summ_word <- word_analysis %>%
anti_join(get_stopwords()) %>%                          # Remove stop words
filter(str_length(word) > 1) %>%
arrange(desc(n))
# Lollipop plot
summ_word %>%
arrange(desc(n), desc(word)) %>% slice(1:25) %>%
ggplot(aes(x=word, y=n)) +
geom_segment( aes(x=word, xend=word, y=0, yend=n)) +
geom_point( size=5, color="red", fill=alpha("orange", 0.3),
alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
labs(title = 'Top 20 Words used in fake domains')
rm(word_analysis)
density_plot <- function(df, col) {
col_name <- enquo(col)
df %>%
ggplot(aes(x = !!col_name, group = trust, fill = trust)) +
geom_density(adjust = 1.5, alpha = 0.4)
}
# Registration time density by trust
density_plot(df, creation_date) +
scale_x_datetime(minor_breaks = '2 years') +
labs(title = 'Density of domain registations over time', y = 'Density') +
theme_ipsum() + theme(axis.title.x = element_blank())
# Update to expiration density by trust
density_plot(df, update_to_exp) +
theme_ipsum() + theme(axis.title.x = element_blank()) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 200)) +
scale_y_sqrt() +
labs(title = 'Density of time to expiration by trust',
y = 'Density',
x = 'Time between update and expiration (days)') +
theme_ipsum()
# Site age and ranking, by trust
fk %>%
ggplot(., aes(x = dom_age_days, y = rank, color = trust)) +
geom_point(show.legend = FALSE) + theme_ipsum() +
scale_y_log10(labels = scales::comma) +
scale_x_continuous(labels = scales::comma) +
labs(title = 'Domain age by Alexa site ranking',
x = 'Age of domain (days)', y = 'Site ranking')
# num nameservers by trust
df %>%
filter(num_nameservers < 50) %>%
ggplot( aes(x=trust, y=num_nameservers, color=trust)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
labs(title = 'Number of nameservers by domain trustworthiness',
y = 'Number of name servers', x = element_blank()) +
coord_flip()
# keyword length, trust, domain age
df %>%
filter(keyword_length <= 6,
dom_age_days < 365.25 * 5) %>% # reg in the past 5 years) %>%
ggplot(aes(x = keyword_length, y = dom_age_days, color = trust)) +
geom_count(alpha = 0.8) +
theme_ipsum() +
labs(title = 'Domain keyword length by domain age',
x = 'Keyword length', y = 'Domain name age')
# domain length, keyword length, trust
df %>%
filter(domain_length < 30) %>%
ggplot(aes(x=domain_length, y=keyword_length, color=trust)) +
geom_count(alpha = 0.6) +
theme_ipsum() +
labs(title = 'Domain length by domain keyword length, by trust',
x = 'Domain name length', y = 'Keyword length') +
coord_flip()
### fk country, registrar, domain age
fk %>%
drop_na(country) %>%
filter(country != 'REDACTED FOR PRIVACY',
dom_age_days < 365.25 * 5) %>% # reg in the past 5 years
mutate(country = fct_lump_n(country, n = 5)) %>%
mutate(registrar = fct_lump_n(registrar, n = 1)) %>%
ggplot( aes(x = country, y = dom_age_days, fill = country)) +
geom_boxplot() +
facet_wrap(~ registrar) +
theme_ipsum() +
labs(title = 'GoDaddy.com, fake registrations',
subtitle = 'Faceted against other registrars in the last 5 years',
x = 'Country', y = 'Domain age')
knitr::spin()
glimpse(df)
library(tidyverse)
glimpse(df)
rm(list = ls)
rm(list = ls())
data("iris")
library(tidyverse)
glimpse(iris)
summary(iris)
rm(iris)
library(tidyverse)
library(nycflights13)
install.packages('nycflights13')
library(tidyverse)
library(nycflights13)
airlines
air <- airlines
airlines <- airlines
View(airlines)
rm(air)
airplanes <- airplanes
airports <- airports
planes <- planes
weather <- weather
rm(list = ls())
library(tidyverse)
library(modelr)
options(na.action = na.warn)
sim1
ggplot(sim1, aes(x,y))+
geom_point()
models <- tibble (
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intersept = a1, slope = a2), data = models, alpha = 0.25) +
geom_point()
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 0.25) +
geom_point()
model1 <- function(a, data) {
a[1] + (data$x * a[2])
}
model1(c(7, 1.5), sim1)
measure_distance <- function(mod, data) {
diff <- data$y - model1(mod, data)
sqrt(mean(diff ^ 2))
}
measure_distance(c(7, 1.5), sim1)
