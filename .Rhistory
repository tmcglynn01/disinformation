df %>% group_by(country) %>% summarise(count = n()) %>% top_n(country, 25)
df %>% group_by(country) %>% summarise(count = n()) %>% arrange(count %>% desc)
df %>%
group_by(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20)
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20)
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(x = country)) + geom_bar()
df %>% ggplot(., aes(country, count())) +
geom_col()
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(x = country, y = count)) + geom_bar()
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(x = country, y = count)) +
geom_bar(stat = 'identity')
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity')
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity')
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:20) %>%
ggplot(., aes(reorder(country, -count), count)) +
geom_bar(stat = 'identity')
df %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:15) %>%
ggplot(., aes(reorder(country, -count), count)) +
geom_bar(stat = 'identity')
df %>%
filter(trust == 'fake') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:15) %>%
ggplot(., aes(reorder(country, -count), count)) +
geom_bar(stat = 'identity') +
labs(title = 'How to arrange Ggplot Bar plot', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:10) %>%
ggplot(., aes(reorder(country, -count), count)) +
geom_bar(stat = 'identity') +
labs(title = 'How to arrange Ggplot Bar plot', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:15) %>%
ggplot(., aes(reorder(country, -count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake Domains by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:15) %>%
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake Domains by country', x = 'Country code')
df %>%
filter(trust == 'fake', country != 'REDACTED FOR PRIVACY') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:15) %>%
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake Domains by country', x = 'Country code')
df %>%
filter(trust == 'fake', country != 'REDACTED FOR PRIVACY') %>%
group_by(country) %>%
drop_na(country) %>%
summarise(count = n()) %>%
arrange(count %>% desc) %>%
slice(1:10) %>%
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake Domains by country', x = 'Country code')
df %>%
filter(trust == 'fake', country != 'REDACTED FOR PRIVACY') %>%
# Summarize by country and take the top 5
group_by(country) %>% drop_na(country) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(1:5) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(country, count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake Domains by country', x = 'Country code')
summary(df$trust)
df %>%
filter(trust == 'fake') %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, count), count)) +
geom_bar(stat = 'identity') + coord_flip() +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, count), count)) +
geom_bar(stat = 'identity') +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(2:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, count), count)) +
geom_bar(stat = 'identity') +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(2:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
group_by(tld) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>% slice(2:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(tld, -count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
select(registrar) %>% group_by(registrar) %>% summarise(count = n()) %>%
arrange(count %>% desc) %>% slice(1:20) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(registrar, -count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
select(registrar) %>% group_by(registrar) %>% summarise(count = n()) %>%
arrange(count %>% desc) %>% slice(1:10) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(registrar, -count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
select(registrar) %>% group_by(registrar) %>% summarise(count = n()) %>%
arrange(count %>% desc) %>% slice(1:5) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(registrar, -count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
df %>%
filter(trust == 'fake') %>%
select(registrar) %>% group_by(registrar) %>% summarise(count = n()) %>%
arrange(count %>% desc) %>% slice(1:10) %>%
# Plot by identity, country and count
ggplot(., aes(reorder(registrar, -count), count)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by country', x = 'Country code')
summary(df$dnssec)
df %>% fct_collapse(dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed'))
df %>% fct_collapse(.$dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed'))
fct_collapse(df$dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed'))
fct_collapse(df$dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records','no', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed', 'yes'))
fct_collapse(df$dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records','no', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed', 'yes', ))
fct_collapse(df$dnssec, unsigned = c('unsigned', 'Unsigned', 'unsigned delegation', 'Unsigned delegation, no records','no', 'Unsigned delegation, no records'), signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed', 'yes', 'Signed delegation'), inactive = 'Inactive')
df$dnssec <- fct_collapse(
df$dnssec,
unsigned = c('unsigned', 'Unsigned', 'unsigned delegation',
'Unsigned delegation, no records', 'no',
'Unsigned delegation, no records'),
signed = c('signedDelegation', 'signed delegation', 'Signed', 'signed',
'yes', 'Signed delegation'),
inactive = 'Inactive')
ggplot(df, mapping = aes(dnssec)) + geom_bar()
ggplot(filter(df, trust == 'fake'), mapping = aes(dnssec)) + geom_bar()
gadf <- read_csv('data/output/mined_gacodes.csv') %>% glimpse
gadf %>%
drop_na(ga_code) %>% group_by(ga_code) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>% group_by(ga_code) %>%
summarise(domain_name, count = n()) %>% arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name, count = n()) %>% arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(count = n()) %>% arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name, ga_code, count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name, ga_code = paste(code, org, ext), count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name,
ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name,
ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1) %>% View
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(domain_name,
ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(cluster = toString(domain_name),
ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(cluster = toString(domain_name),
#ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1)
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(cluster = toString(domain_name),
#ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1) %>% View
gadf %>%
drop_na(ga_code) %>%
separate(ga_code, into = c('code', 'org', 'ext'), sep = '-') %>%
group_by(org) %>%
summarise(cluster = toString(domain_name),
#ga_code = paste(code, org, ext, sep = '-'),
count = n()) %>%
arrange(count %>% desc) %>%
filter(count > 1) %>% View
select(df, dom_split) %>% head(20)
select(df, dom_split) %>% head(20) %>% View
select(df, dom_split) %>% sample_n(20) %>% View
df %>%
filter(map_lgl(dom_split, ~ any(c("our", "protect", "country") %in% .x)))
df %>%
filter(map_lgl(dom_split, ~ any(c("our", "protect", "country") %in% .x))) %>%
View
df %>%
filter(map_lgl(dom_split, ~ any(c("covid", "reopen", "country") %in% .x))) %>%
View
df %>%
filter(map_lgl(dom_split, ~ any(c("covid", "reopen", "country") %in% .x))) %>%
select(1:4, trust, dom_split) %>% View
df %>%
filter(map_lgl(dom_split, ~ any(c("covid") %in% .x))) %>%
select(1:4, trust, dom_split) %>% View
# Covid not recognized
df %>%
mutate(covid = map(domain, str_detect, 'covid'),
covid = map_lgl(covid, any))
# Covid not recognized
df %>%
mutate(covid = map(domain, str_detect, 'covid'),
covid = map_lgl(covid, any)) %>%
filter(covid == TRUE)
# Covid not recognized
df %>%
mutate(covid = map(domain, str_detect, 'covid'),
covid = map_lgl(covid, any)) %>%
filter(covid == TRUE) %>% View
x <- c('some', 'word')
y <- c('other', 'word')
tibble(words = c(x,y))
tibble(words = list(x,y))
z <- tibble(words = list(x,y))
summary(z)
count(row)
for (row in z) {
count(row)
}
count(unnest(row))
for (row in z) {
count(unnest(row))
}
install.packages(tm)
install.packages('tm')
library(tm)
vignette('tm')
df$dom_split[100]
df$dom_split[10000]
?flatten
df$dom_split[10000] %>% flatten
flatten_chr(df$dom_split)
flatten_chr(df$dom_split) %>% paste(sep = ' ')
flatten_chr(df$dom_split) %>% str_c(., sep = ' ')
str_c(letters, collapse = "")
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ')
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ') %>% tm::as.VCorpus()
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ') %>% tm::scan_tokenizer()
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ') %>% tm::scan_tokenizer() %>% tm::inspect()
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ') %>% tm::VCorpus()
DirSource(flatten_chr(df$dom_split) %>% str_c(., collapse = ' '), mode = "binary"),
list(reader = readReut21578XMLasPlain)
DirSource(flatten_chr(df$dom_split) %>% str_c(., collapse = ' '), mode = "binary"), list(reader = readReut21578XMLasPlain)
rm(x,y,z)
rm(row)
crude <- flatten_chr(df$dom_split) %>% str_c(., collapse = ' ')
as.matrix(TermDocumentMatrix(crude))
data('crude')
typeof(crude)
as.matrix(TermDocumentMatrix(df$dom_split))
as.matrix(TermDocumentMatrix(crude))
flatten_chr(df$dom_split) %>% str_c(., collapse = ' ')
flatten_chr(df$dom_split)
flatten_chr(df$dom_split) %>% unlist
flatten_chr(df$dom_split) %>% tbl()
flatten_chr(df$dom_split) %>% table
flatten_chr(df$dom_split) %>% table %>% sort(decreasing=TRUE)
#Any how
df %>%
flatten_chr(dom_split) %>% table %>% sort(decreasing = TRUE)
#Any how
df %>%
flatten_chr(df$dom_split) %>% table %>% sort(decreasing = TRUE)
#Any how
df %>%
mapply(flatten_chr, dom_split) %>%
table %>% sort(decreasing = TRUE)
#Any how
df %>%
mapply(flatten_chr, .$dom_split) %>%
table %>% sort(decreasing = TRUE)
#Any how
flatten_chr(df$dom_split) %>% table %>% sort(decreasing=TRUE)
#Any how
fake_filter <- filter(df, trust == 'fake')
flatten_chr(fake_filter$dom_split) %>% table %>% sort(decreasing=TRUE)
flatten_chr(fake_filter$dom_split) %>%
table(.) %>% sort(decreasing=TRUE)
fake_filter$dom_split %>% unnest()
fake_filter$dom_split %>% unnest(cols = c('x'))
flatten_chr(fake_filter$dom_split) %>% unnest(cols = c('x'))
str_split('hi thes is test', '\\s+')
str_split('hi thes is test', '\\s+') %>% typeof()
flatten_chr(fake_filter$dom_split) %>% typeof()
fake_filter$dom_split %>% typeof()
fake_filter$dom_split %>% unnest()
fake_filter$dom_split %>% unnest(cols(x='i'))
install.packages('tidytext')
library(tidytext)
browseVignettes('tidytext')
fake_filter$dom_split %>% unnest_tokens()
flatten_chr(fake_filter$dom_split)
flatten_chr(fake_filter$dom_split) %>% unnest_tokens()
flatten_chr(fake_filter$dom_split) %>% unnest_tokens(.)
flatten_chr(fake_filter$dom_split) %>% unnest_tokens(word, text)
flatten_chr(fake_filter$dom_split) %>%
paste(collapse = ' ')
flatten_chr(fake_filter$dom_split) %>%
paste(collapse = ' ') %>% unnest_tokens()
paste(collapse = ' ') %>% unnest_tokens(word, text)
text <- flatten_chr(fake_filter$dom_split) %>% paste(collapse = ' ')
text
browseVignettes(package = "tidytext")
library(janeaustenr)
book_words <- austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE)
book_words
typeof(austen_books())
austen_books()
word
unnest_tokens(text, word, text)
df %>% unnest_tokens(word, dom_split)
df %>% unnest_tokens(word, text)
df %>% unnest_tokens(word, dom_split %>% flatten_chr())
df %>% unnest_tokens(word, dom_split %>% flatten_chr(dom_split))
unnest_tokens(df$di)
prideprejudice
typeof(prideprejudice)
class(prideprejudice)
class(df$dom_split)
class(flatten_chr(df$dom_split))
d <- tibble(flatten_chr(df$dom_split))
d <- tibble(txt = flatten_chr(df$dom_split))
d %>% unnest_tokens(word, txt)
d %>% unnest_tokens(word, text) %>% count(book, word, sort = TRUE)
d %>% unnest_tokens(word, txt) %>% count(book, word, sort = TRUE)
d %>% unnest_tokens(word, txt) %>% count(word, sort = TRUE)
word_analysis <- tibble(text = flatten_chr(df$dom_split))
word_analysis %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
word_analysis <- word_analysis %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
word_analysis %>% anti_join(get_stopwords())
word_analysis %>%
anti_join(get_stopwords()) %>%
filter(str_length(word > 1))
word_analysis %>%
anti_join(get_stopwords()) %>%
filter(str_length(word) > 1)
word_analysis %>%
anti_join(get_stopwords()) %>%
filter(str_length(word) > 1) %>%
arrange(desc(n)) %>% slice(1:25) %>%
ggplot(., mapping = aes(reorder(word, -n), n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by registrar', x = 'Country code')
word_analysis %>%
anti_join(get_stopwords()) %>%
filter(str_length(word) > 1) %>%
arrange(desc(n)) %>% slice(1:20) %>%
ggplot(., mapping = aes(reorder(word, -n), n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = 'Fake domain registrations by registrar', x = 'Country code')
